/******************************************************************************
*
* Copyright (C) 2009 - 2014 Xilinx, Inc.  All rights reserved.
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
*
* Use of the Software is limited solely to applications:
* (a) running on a Xilinx device, or
* (b) that interact with a Xilinx device through a bus or interconnect.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
* XILINX  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
* OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*
* Except as contained in this notice, the name of the Xilinx shall not be used
* in advertising or otherwise to promote the sale, use or other dealings in
* this Software without prior written authorization from Xilinx.
*
******************************************************************************/

/*
 * helloworld.c: simple test application
 *
 * This application configures UART 16550 to baud rate 9600.
 * PS7 UART (Zynq) is not initialized by this application, since
 * bootrom/bsp configures it to baud rate 115200
 *
 * ------------------------------------------------
 * | UART TYPE   BAUD RATE                        |
 * ------------------------------------------------
 *   uartns550   9600
 *   uartlite    Configurable only in HW design
 *   ps7_uart    115200 (configured by bootrom/bsp)
 */

#include <stdio.h>
#include "platform.h"
#include <xil_printf.h>

char option_menu(void)
{
	char option;

	print("Standalone drivers\n\r");
	print("AXI peripheral testing\n\n\r");
	print("1 Zybo buttons \n\r");
	print("2 Zybo switches \n\r");
	print("3 Zybo LEDs\n\r");
	print("4 PWM 0\n\r");
	print("5 PWM 1\n\r");
	print("6 PMOD\n\r");

	do
	{
		option = inbyte();
		outbyte(option);
	}
	while(option < '1' || '6' < option);

	return option;
}

#define ACCESS_REGISTER(base, index)		(*((volatile uint32_t *)((base)+4*(index))))
#define REGISTER_GET(reg, mask, shift)		(((mask) & (reg)) >> (shift))
#define REGISTER_SET(reg, mask, shift, val)	((reg) = (~mask & (reg)) | ((mask) & ((val)<<(shift))))

void zybo_buttons()
{
	ACCESS_REGISTER(XPAR_ZYBO_BASEADDR, 1) = 0xFFFFFFFF;

	print("1 Zybo buttons \n\r");
	print("Press any key to read buttons, press ESC to quit.\n\r");
	do
	{
		xil_printf("Buttons = 0x%X", ACCESS_REGISTER(XPAR_ZYBO_BASEADDR, 0));
	}
	while (inbyte() != 27);
}

int main()
{
	char op;
    init_platform();

    for (;;)
    {
		op = option_menu();

		switch (op)
		{
		case '1': zybo_buttons(); break;
		case '2': break;
		case '3': break;
		case '4': break;
		case '5': break;
		case '6': break;
		default:;
		}
    }

    cleanup_platform();
    return 0;
}
